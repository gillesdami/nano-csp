{"version":3,"sources":["channel.js"],"names":["channel","emiter","bufferContentPromise","emit","close","push","buffer","length","Promise","bufferContentPromiseResolver","r","shift"],"mappings":";AAA+BA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,GAAAA,KAAAA,MAAAA,EAAAA,SAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,MAAAA,aAAAA,EAAAA,QAAAA,QAAAA,EAAAA,OAAAA,KAAAA,SAAAA,GAAAA,EAAAA,OAAAA,IAAAA,SAAAA,GAAAA,EAAAA,QAAAA,KAAAA,EAAAA,EAAAA,KAAAA,SAAAA,SAAAA,EAAAA,OAAAA,MAAAA,GAAAA,EAAAA,QAAAA,IAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,IAAAA,SAAAA,EAAAA,QAAAA,CAAAA,MAAAA,EAAAA,MAAAA,IAAAA,MAAAA,IAAAA,QAAAA,EAAAA,OAAAA,GAAAA,MAAAA,QAAAA,EAAAA,QAAAA,CAAAA,MAAAA,EAAAA,MAAAA,KAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,IAAAA,EAAAA,KAAAA,EAAAA,KAAAA,KAAAA,QAAAA,SAAAA,EAAAA,GAAAA,OAAAA,IAAAA,QAAAA,SAAAA,EAAAA,GAAAA,IAAAA,EAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAAA,QAAAA,EAAAA,OAAAA,EAAAA,KAAAA,MAAAA,EAAAA,EAAAA,EAAAA,KAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,mBAAAA,EAAAA,SAAAA,KAAAA,YAAAA,GAAAA,MAAAA,mBAAAA,QAAAA,OAAAA,gBAAAA,EAAAA,UAAAA,OAAAA,eAAAA,WAAAA,OAAAA,OAAAA,EAAAA,UAAAA,KAAAA,SAAAA,GAAAA,OAAAA,KAAAA,QAAAA,OAAAA,IAAAA,EAAAA,UAAAA,MAAAA,SAAAA,GAAAA,OAAAA,KAAAA,QAAAA,QAAAA,IAAAA,EAAAA,UAAAA,OAAAA,SAAAA,GAAAA,OAAAA,KAAAA,QAAAA,SAAAA,IAAAA,CAAAA,KAAAA,SAAAA,GAAAA,OAAAA,WAAAA,OAAAA,IAAAA,EAAAA,EAAAA,MAAAA,KAAAA,cAAAA,MAAAA,SAAAA,GAAAA,OAAAA,IAAAA,EAAAA,KAAAA,GAAAA,QAAAA,QAAAA,WAAhB,IAAA,EAAA,EAAA,KAAA,mBAAA,KAAA,SAAwBC,EAAAA,GAAxB,IAAA,EAAA,EAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAAA,EACI,GADJ,OAGuBC,EAAAA,OAHvB,EAKJ,EAAA,SAACC,EAAMC,GACHC,EAAAA,KAAKF,GACiBC,EAAAA,KAPtB,KAAA,EAWHE,EAAOC,SACgB,EAAA,IAAIC,QAAQ,SAAA,GAAKC,OAAAA,EAA+BC,KAZpE,KAAA,EAcYR,OAdZ,EAAA,KAAA,EAcYA,EAAAA,MAAAA,GAdZ,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAcH,EAAA,IAAA,IAdG,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA,KAAA,GAAA,MAcqDI,OAdrD,EAAA,KAAA,GAcqDA,EAAOK,QAd5D,KAAA,GAAA,EAAA,GAAA,EAAA,KAcoC,EAAA,IAAA,IAdpC,EAAA,GAAA,KAAA,GAAA,GAAA,EAAA,GAAA,CAAA,EAAA,KAAA,EAAA,MAAA,KAAA,GAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,SAAgBX,OAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA","file":"channel.map","sourceRoot":"..","sourcesContent":["export default async function* channel(emiter) {\n    const buffer = [];\n\n    let bufferContentPromiseResolver, bufferContentPromise;\n\n    emiter((emit, close) => {\n        buffer.push(emit);\n        bufferContentPromiseResolver(close);\n    });\n\n    do {\n        if(!buffer.length) {\n            bufferContentPromise = new Promise(r => bufferContentPromiseResolver = r);\n        }\n    } while(true !== await bufferContentPromise && false !== (yield buffer.shift()))\n}"]}